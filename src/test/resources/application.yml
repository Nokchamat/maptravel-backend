server:
  port:8080

spring:
  jwt:
    secret-key: sdlafjaldfkjasdlajdfl;akj
    access:
      expiration: 3600000 # 1시간(60분) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    refresh:
      expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234
    url: jdbc:mysql://localhost:3305/test
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 15MB

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: email, profile
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
#          kakao:
#            client-id: ${KAKAO_API_KEY}
#            redirect-uri: ${KAKAO_REDIRECT_URI}
#            client-authentication-method: POST
#            authorization-grant-type: authorization_code
#            scope: profile_nickname

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
#          kakao:
#            authorization_uri: https://kauth.kakao.com/oauth/authorize
#            token_uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user_name_attribute: id
  mail:
    host: smtp.gmail.com # SMTP 서버 호스트
    port: 587 # SMTP 서버 포트
    username: test # SMTP 서버 로그인 아이디
    password: test # SMTP 서버 로그인 앱 패스워드
    properties:
      mail:
        smtp:
          auth: true # 사용자 인증 시도 여부 (기본값 : false)
          timeout: 5000 # Socket Read Timeout 시간(ms) (기본값 : 무한대)
          starttls:
            enable: true # StartTLS 활성화 여부 (기본값 : false)
cloud:
  aws:
    s3:
      prefix: test
      bucket: test
    stack.auto: false
    region:
      static: ap-northeast-2
    credentials:
      accessKey: test
      secretKey: test